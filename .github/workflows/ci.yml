name: CI

on:
  workflow_dispatch:
  push:


jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set Up Git User
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://$GH_TOKEN@github.com/Er3en/devops-system.git
          git push origin HEAD
        env:
          GH_TOKEN: ${{ secrets.GHCR_TOKEN }}
      - name: Debug
        run: |
          echo "GITHUB_EVENT_NAME=$GITHUB_EVENT_NAME"
          echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
          echo "GITHUB_REF=$GITHUB_REF"
          echo "Current branch from git: $(git symbolic-ref --short HEAD)"

      - name: Run Rebase Script
        run: |
          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
            # In a PR event, use GITHUB_HEAD_REF to get the feature branch
            echo "Feature branch is $GITHUB_HEAD_REF"
            echo "FEATURE_BRANCH=$GITHUB_HEAD_REF"
          else
            # For push or manual event, use the current branch
            FEATURE_BRANCH=$(git symbolic-ref --short HEAD)
            echo "Feature branch is $FEATURE_BRANCH"
            echo "FEATURE_BRANCH=$FEATURE_BRANCH"
          fi
          bash -x ./src/scripts/rebase_feature_branch.sh $FEATURE_BRANCH "main"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.4"

      # Cache dependencies to speed up builds
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install dependencies
      - name: Install Dependencies
        run: |
          go mod tidy

      # Run tests
      - name: Run Tests
        run: |
          go test ./... -v

      # Build the application
      - name: Build Application
        run: |
          go build ./...
          gofmt -l .
          go vet ./...

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy Application
        run: |
          echo "Your deployment logic here, e.g., SCP the binary, or use Kubernetes"